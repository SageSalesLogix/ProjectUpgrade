<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="RelationshipUpgradePackageGettingAllRelationships" xml:space="preserve">
    <value>Getting all relationships.</value>
  </data>
  <data name="RelationshipUpgradePackage_DeletingModelIndexCache" xml:space="preserve">
    <value>Deleting model index cache.</value>
  </data>
  <data name="RelationshipUpgradePackage_ErrorRenamingRelationship" xml:space="preserve">
    <value>Error renaming {0}</value>
  </data>
  <data name="RelationshipUpgradePackage_LookingUpEntityIds" xml:space="preserve">
    <value>Looking up all entity Ids.</value>
  </data>
  <data name="RelationshipUpgradePackage_RenamingRelationshipFile" xml:space="preserve">
    <value>Renaming {0}</value>
  </data>
  <data name="UpgradeModuleFriendlyName" xml:space="preserve">
    <value>Platform Upgrade Module</value>
  </data>
	<data name="EntityUpgradePackage_Unable_to_find_an_appropriate_last_updated_property">
		<value><![CDATA[Unable to find an appropriate last updated property on entity '{0}'.]]></value>
	</data>
	<data name="MashupUpgradePackage_Migrating_model_type_names_from_project_workspace">
		<value xml:space="preserve">Migrating model type names from project workspace</value>
	</data>
	<data name="MashupUpgradePackage_Migrating_model_type_names_from_configuration">
		<value xml:space="preserve">Migrating model type names from configuration</value>
	</data>
	<data name="MashupUpgradePackage_Appending_mashup_model_type_name">
		<value xml:space="preserve">Appending mashup model type name</value>
	</data>
	<data name="QuickFormUpgradePackage_Unable_to_parse_method_file">
		<value><![CDATA[Unable to parse method file: ]]></value>
	</data>
	<data name="QuickFormUpgradePackage_Moving_snippet_action_method_file">
		<value><![CDATA[Moving snippet action method file: ]]></value>
	</data>
	<data name="QuickFormUpgradePackage_Moving_method_target_snippet_file">
		<value><![CDATA[Moving method target snippet file: ]]></value>
	</data>
	<data name="QuickFormUpgradePackage_Snippet_will_need_to_be_manually_updated">
		<value xml:space="preserve">Snippet {0} will need to be manually updated to match the new snippet method prototype.</value>
	</data>
	<data name="SupportFilesMigrationUpgradePackage_Retrieving_support_files_to_copy">
		<value xml:space="preserve">Retrieving support files to copy.</value>
	</data>
	<data name="SupportFilesMigrationUpgradePackage_The_support_files_path_is_being_copied_into_the_model_for_portal">
		<value xml:space="preserve">The support files path {0} is being copied into the model for portal {1}.</value>
	</data>
	<data name="SupportFilesMigrationUpgradePackage_The_support_files_path_does_not_exist_for_portal">
	        <value xml:space="preserve">The support files path {0} does not exist for portal {1}.</value>
	</data>
<data name="RelationshipUpgradePackage_FileWasRenamed">
		<value xml:space="preserve">{0} was renamed to {1}.</value>
	</data>
</root>